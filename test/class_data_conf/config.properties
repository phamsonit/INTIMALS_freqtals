#JAVA configuration

inputPath = test
outputPath = test/class_data_output

#----------------------------------------------------
#input 2-class data ?
2Class = true

#path of old version
inputPath1 = version1

#path of new version
inputPath2 = version2

#minimum discriminative score
minDSScore = 0.2

#keep highest score pattern.
keepHighestScore = false

#number of highest score patterns at the end
numPatterns = 100

#----------------------------------------------------

#timeout (minutes)
timeout = 5

#leaf size constraints: using in the first step to limit the size of the search space
minLeaf = 1
maxLeaf = 3

#node size constraints: using to remove small patterns
minNode = 10

#mining patterns method :
twoStep = true
# true  - using 2 steps to mine maximal patterns:
    # step 1: find frequent maximal patterns with size constraints
    # step 2: grown frequent pattern to find maximal patterns
# false - find maximal patterns in 1 step

#----------------------------------------------------
#abstract leaf label.
abstractLeafs=false
# true  - replace all leaf labels by **
# false - using leaf labels

#build grammar: true - build grammar from input data; false - read grammar from given file
buildGrammar=true
#file contains a list of root labels
rootLabelFile=test/class_data_conf/listRootLabel.txt
#file contains a list of label that only allow in patterns
whiteLabelFile=test/class_data_conf/listWhiteLabel.txt
#file contains a list of xml characters
xmlCharacterFile=test/class_data_conf/xmlCharacters.txt

#configurations for running parallel:
#list of minimum support thresholds
minSupportList=3
#list of folders: note - there is no space between folders
inFilesList=sample_data1,sample_data2